#ifndef SHADERS_H
#define SHADERS_H

#include <stdint.h>

static const uint8_t vs_screen[175] = {
	0x56, 0x53, 0x48, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x61, 0x74, // VSH...........at
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x20, 0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, // tribute highp ve
	0x63, 0x32, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x76, // c2 a_position;.v
	0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, // oid main ().{.  
	0x68, 0x69, 0x67, 0x68, 0x70, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // highp vec4 tmpva
	0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, // r_1;.  tmpvar_1.
	0x7a, 0x77, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x32, 0x28, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // zw = vec2(0.0, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x2e, // .0);.  tmpvar_1.
	0x78, 0x79, 0x20, 0x3d, 0x20, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3b, // xy = a_position;
	0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, // .  gl_Position =
	0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,       //  tmpvar_1;.}...
};

static const uint8_t testfs2[1293] =
{
	0x46, 0x53, 0x48, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x04, 0x00, 0x00, 0x75, 0x6e, // FSH...........un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x52, 0x65, 0x73, 0x6f, // iform vec4 uReso
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // lution;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, // vec4 uGlobalTime
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // ;.uniform vec4 i
	0x4d, 0x6f, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x52, 0x65, // Mouse;..vec3 iRe
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // solution;.float 
	0x69, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x0a, 0x76, 0x6f, // iGlobalTime;..vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x28, 0x20, 0x6f, 0x75, // id mainImage( ou
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x6f, 0x2c, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, // t vec4 o,  vec2 
	0x55, 0x20, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x20, 0x3d, 0x20, 0x76, 0x65, // U ).{.    o = ve
	0x63, 0x34, 0x28, 0x30, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, // c4(0.0);.    flo
	0x61, 0x74, 0x20, 0x72, 0x3d, 0x2e, 0x31, 0x2c, 0x20, 0x74, 0x3d, 0x69, 0x47, 0x6c, 0x6f, 0x62, // at r=.1, t=iGlob
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x2c, 0x20, 0x48, 0x20, 0x3d, 0x20, 0x69, 0x52, 0x65, 0x73, // alTime, H = iRes
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x55, // olution.y;.    U
	0x20, 0x2f, 0x3d, 0x20, 0x20, 0x48, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //  /=  H;         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x3a, //      // object :
	0x20, 0x64, 0x69, 0x73, 0x63, 0x28, 0x50, 0x2c, 0x72, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, //  disc(P,r).    v
	0x65, 0x63, 0x32, 0x20, 0x50, 0x20, 0x3d, 0x20, 0x2e, 0x35, 0x2b, 0x2e, 0x35, 0x2a, 0x76, 0x65, // ec2 P = .5+.5*ve
	0x63, 0x32, 0x28, 0x63, 0x6f, 0x73, 0x28, 0x74, 0x29, 0x2c, 0x73, 0x69, 0x6e, 0x28, 0x74, 0x2a, // c2(cos(t),sin(t*
	0x2e, 0x37, 0x29, 0x29, 0x2c, 0x20, 0x66, 0x55, 0x3b, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, // .7)), fU;  .    
	0x55, 0x2a, 0x3d, 0x2e, 0x35, 0x3b, 0x20, 0x50, 0x2a, 0x3d, 0x2e, 0x35, 0x3b, 0x20, 0x20, 0x20, // U*=.5; P*=.5;   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x75, 0x6e, 0x7a, 0x6f, 0x6f, 0x6d, 0x20, //       // unzoom 
	0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x20, 0x64, 0x6f, // for the whole do
	0x6d, 0x61, 0x69, 0x6e, 0x20, 0x66, 0x61, 0x6c, 0x6c, 0x73, 0x20, 0x77, 0x69, 0x74, 0x68, 0x69, // main falls withi
	0x6e, 0x20, 0x5b, 0x30, 0x2c, 0x31, 0x5d, 0x5e, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, // n [0,1]^n.    . 
	0x20, 0x20, 0x20, 0x6f, 0x2e, 0x62, 0x20, 0x3d, 0x20, 0x2e, 0x32, 0x35, 0x3b, 0x20, 0x20, 0x20, //    o.b = .25;   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x62, 0x61, 0x63, 0x6b, //          // back
	0x67, 0x72, 0x6f, 0x75, 0x64, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x64, 0x20, 0x62, 0x6c, 0x75, // groud = cold blu
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x28, // e.    .    for (
	0x69, 0x6e, 0x74, 0x20, 0x69, 0x3d, 0x30, 0x3b, 0x20, 0x69, 0x3c, 0x37, 0x3b, 0x20, 0x69, 0x2b, // int i=0; i<7; i+
	0x2b, 0x29, 0x20, 0x7b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // +) {            
	0x20, 0x2f, 0x2f, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6e, 0x66, 0x69, 0x6e, //  // to the infin
	0x69, 0x74, 0x79, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x62, 0x65, 0x79, 0x6f, 0x6e, 0x64, 0x20, // ity, and beyond 
	0x21, 0x20, 0x3a, 0x2d, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x55, // ! :-).        fU
	0x20, 0x3d, 0x20, 0x6d, 0x69, 0x6e, 0x28, 0x55, 0x2c, 0x31, 0x2e, 0x2d, 0x55, 0x29, 0x3b, 0x20, //  = min(U,1.-U); 
	0x69, 0x66, 0x20, 0x28, 0x6d, 0x69, 0x6e, 0x28, 0x66, 0x55, 0x2e, 0x78, 0x2c, 0x66, 0x55, 0x2e, // if (min(fU.x,fU.
	0x79, 0x29, 0x20, 0x3c, 0x20, 0x33, 0x2e, 0x2a, 0x72, 0x2f, 0x48, 0x29, 0x20, 0x7b, 0x20, 0x6f, // y) < 3.*r/H) { o
	0x2d, 0x2d, 0x3b, 0x20, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x3b, 0x20, 0x7d, 0x20, 0x2f, 0x2f, 0x20, // --; break; } // 
	0x63, 0x65, 0x6c, 0x6c, 0x20, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x0a, 0x20, 0x20, 0x20, 0x20, // cell border.    
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x50, 0x2d, 0x2e, //   if (length(P-.
	0x35, 0x29, 0x20, 0x2d, 0x20, 0x72, 0x20, 0x3e, 0x20, 0x2e, 0x37, 0x29, 0x20, 0x62, 0x72, 0x65, // 5) - r > .7) bre
	0x61, 0x6b, 0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x20, 0x69, 0x73, 0x20, 0x6f, // ak; // cell is o
	0x75, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x68, 0x61, 0x70, 0x65, 0x0a, // ut of the shape.
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .               
	0x20, 0x2f, 0x2f, 0x20, 0x2d, 0x2d, 0x2d, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x65, 0x20, //  // --- iterate 
	0x74, 0x6f, 0x20, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x20, 0x63, 0x65, 0x6c, 0x6c, 0x0a, 0x20, 0x20, // to child cell.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x55, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x65, 0x70, 0x28, //       fU = step(
	0x2e, 0x35, 0x2c, 0x55, 0x29, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .5,U);          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, 0x2f, 0x20, 0x73, 0x65, 0x6c, 0x65, 0x63, //         // selec
	0x74, 0x20, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // t child.        
	0x55, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x55, 0x20, 0x2d, 0x20, 0x66, 0x55, 0x3b, 0x20, 0x20, // U = 2.*U - fU;  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, //                 
	0x20, 0x20, 0x2f, 0x2f, 0x20, 0x67, 0x6f, 0x20, 0x74, 0x6f, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x6c, //   // go to new l
	0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ocal frame.     
	0x20, 0x20, 0x20, 0x50, 0x20, 0x3d, 0x20, 0x32, 0x2e, 0x2a, 0x50, 0x20, 0x2d, 0x20, 0x66, 0x55, //    P = 2.*P - fU
	0x3b, 0x20, 0x20, 0x72, 0x20, 0x2a, 0x3d, 0x20, 0x32, 0x2e, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // ;  r *= 2.;.    
	0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x20, 0x2b, //     .        o +
	0x3d, 0x20, 0x2e, 0x31, 0x33, 0x3b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // = .13;          
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2f, //                /
	0x2f, 0x20, 0x67, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x72, // / getting closer
	0x2c, 0x20, 0x67, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x72, // , getting hotter
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // .    }.         
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x20, 0x20, 0x6f, 0x2e, 0x67, 0x62, 0x20, 0x2a, 0x3d, //       .  o.gb *=
	0x20, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x73, 0x74, 0x65, 0x70, 0x28, 0x2e, 0x39, 0x2c, 0x31, //  smoothstep(.9,1
	0x2e, 0x2c, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x28, 0x50, 0x2d, 0x55, 0x29, 0x2f, 0x72, 0x29, // .,length(P-U)/r)
	0x3b, 0x20, 0x2f, 0x2f, 0x20, 0x64, 0x72, 0x61, 0x77, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, // ; // draw object
	0x0a, 0x7d, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x20, // .}..void main() 
	0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // {.  vec4 color =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x52, //  vec4(1.0);.  iR
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x75, 0x52, 0x65, 0x73, // esolution = uRes
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x69, // olution.xyz;.  i
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x75, 0x47, 0x6c, // GlobalTime = uGl
	0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x2e, 0x78, 0x3b, 0x0a, 0x20, 0x20, 0x6d, 0x61, // obalTime.x;.  ma
	0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x28, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x67, // inImage(color, g
	0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, 0x29, 0x3b, // l_FragCoord.xy);
	0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, // .  gl_FragColor 
	0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x00,                   // = color;.}...
};

static const uint8_t testfs3[452] =
{
	0x46, 0x53, 0x48, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb5, 0x01, 0x00, 0x00, 0x75, 0x6e, // FSH...........un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x52, 0x65, 0x73, 0x6f, // iform vec4 uReso
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, // lution;.uniform 
	0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, // vec4 uGlobalTime
	0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x69, // ;.uniform vec4 i
	0x4d, 0x6f, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x0a, 0x76, 0x65, 0x63, 0x33, 0x20, 0x69, 0x52, 0x65, // Mouse;..vec3 iRe
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, // solution;.float 
	0x69, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x3b, 0x0a, 0x0a, 0x76, 0x6f, // iGlobalTime;..vo
	0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x28, 0x20, 0x6f, 0x75, // id mainImage( ou
	0x74, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x66, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, // t vec4 fragColor
	0x2c, 0x20, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x66, 0x72, 0x61, 0x67, 0x43, 0x6f, // , in vec2 fragCo
	0x6f, 0x72, 0x64, 0x20, 0x29, 0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x32, 0x20, 0x75, // ord ).{.  vec2 u
	0x76, 0x20, 0x3d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x2e, 0x78, 0x79, // v = fragCoord.xy
	0x20, 0x2f, 0x20, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, //  / iResolution.x
	0x79, 0x3b, 0x0a, 0x20, 0x20, 0x66, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, // y;.  fragColor =
	0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x75, 0x76, 0x2c, 0x30, 0x2e, 0x35, 0x2b, 0x30, 0x2e, 0x35, //  vec4(uv,0.5+0.5
	0x2a, 0x73, 0x69, 0x6e, 0x28, 0x69, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, // *sin(iGlobalTime
	0x29, 0x2c, 0x31, 0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, // ),1.0);.}..void 
	0x6d, 0x61, 0x69, 0x6e, 0x28, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, // main() {.  vec4 
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, 0x31, 0x2e, 0x30, // color = vec4(1.0
	0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, // );.  iResolution
	0x20, 0x3d, 0x20, 0x75, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x78, //  = uResolution.x
	0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, // yz;.  iGlobalTim
	0x65, 0x20, 0x3d, 0x20, 0x75, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x2e, // e = uGlobalTime.
	0x78, 0x3b, 0x0a, 0x20, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x28, 0x63, // x;.  mainImage(c
	0x6f, 0x6c, 0x6f, 0x72, 0x2c, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6f, // olor, gl_FragCoo
	0x72, 0x64, 0x2e, 0x78, 0x79, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, // rd.xy);.  gl_Fra
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x3b, 0x0a, // gColor = color;.
	0x7d, 0x0a, 0x0a, 0x00,                                                                         // }...
};

#endif
